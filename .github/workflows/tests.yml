name: Full CI process for Symfony 6.3
on:
  push:
    branches:
      - main

jobs:
  symfony:
    name: Symfony 6.3.* (PHP ${{ matrix.php-versions }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: ['8.2']
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_DATABASE: db_eterno
          MYSQL_USER: db_user
          MYSQL_PASSWORD: db_password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP, extensions, and Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, iconv, json, mbstring

      - name: Check PHP Version
        run: php -v

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Cache Composer packages
        uses: actions/cache@v2
        with:
          path: vendor
          key: composer-${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: composer-${{ runner.os }}-

      - name: Install Dependencies
        run: composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Check requirements with Composer
        run: composer check-platform-reqs

      - name: Check the Symfony console
        run: bin/console about

      - name: Coding standards checks (php_codesniffer + php-cs-fixer)
        if: matrix.php-versions == '8.2'
        run: make qa-cs-fixer

      - name: Static analysis of PHP code (PHPStan)
        run: make qa-phpstan

      - name: Initialize the database
        run: |
          make create-env
          bin/console doctrine:database:create --if-not-exists
          bin/console doctrine:schema:update --force

      - name: Load Doctrine fixtures
        run: make fixtures-load

      - name: Run functional and unit tests
        run: |
          if [ -f phpunit.xml.ci ]; then 
            cp phpunit.xml.ci phpunit.xml; 
          fi
          ./vendor/bin/pest
